@using Zuschnitt.Models;

@inject AppState AppState;

@if (Column != null)
{
    <FluentButton Id="@_id" IconStart="@(new Icons.Regular.Size20.LineHorizontal3())" OnClick="() => _showMenu = !_showMenu"/>
    <FluentMenu @bind-Open="_showMenu" Anchor="@_id">
        <ActionMenuItem OnClick="AddPart" Text="Add Part" Icon="@(new Icons.Regular.Size20.AddCircle())"/>
        <FluentDivider/>
        <ActionMenuItem OnClick="AddColumn" Text="New Column" Icon="@(new Icons.Regular.Size20.New())"/>
        <ActionMenuItem OnClick="CopyColumn" Text="Duplicate Column" Icon="@(new Icons.Regular.Size20.Copy())"/>
        <FluentDivider/>
        @foreach (var sheet in Column.Parent.Parent.Sheets)
        {
            if (sheet == Column.Parent.Parent.SelectedSheet) continue;
            <ActionMenuItem Icon="@(new Icons.Regular.Size20.TableMoveRight())" OnClick="() => Reassign(sheet)" Text="@($"Move to: {sheet.Name}")"/>
        }
        <FluentDivider/>
        <ActionMenuItem Icon="@(new Icons.Regular.Size20.Delete())" OnClick="DeleteColumn" Text="Delete Column"/>
    </FluentMenu>
}

@code {
    [Parameter] public Column? Column { get; set; }

    private bool _showMenu = false;
    private string _id = Guid.NewGuid().ToString();

    private void AddColumn()
    {
        _showMenu = false;
        if (Column == null) return;
        Column.Parent.AddColumn();
        AppState.StateHasChanged();
    }

    private void CopyColumn()
    {
        _showMenu = false;
        if (Column == null) return;
        Column.Copy();
        AppState.StateHasChanged();
    }

    private void AddPart()
    {
        _showMenu = false;
        if (Column == null) return;
        
        Column.AddPart();
        
        AppState.StateHasChanged();
    }

    private void Reassign(Sheet newSheet)
    {
        _showMenu = false;
        if (Column == null) return;
        
        Column.Reassign(newSheet);
        
        AppState.StateHasChanged();
    }

    private void DeleteColumn()
    {
        _showMenu = false;
        if (Column == null) return;

        Column.Delete();
        
        AppState.StateHasChanged();
    }

}