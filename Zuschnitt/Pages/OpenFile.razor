@page "/openfile"

@using System.Text.Json
@using System.Text.Json.Serialization
@using Zuschnitt.Models

@inject AppState AppState
@inject NavigationManager NavigationManager


<FluentInputFile @ref="@_inputFile"
                 DragDropZoneVisible="false"
                 Mode="InputFileMode.SaveToTemporaryFolder"
                 Multiple="false"
                 MaximumFileSize="@(20 * 1024)"
                 AnchorId="SelectFileButton"
                 Accept=".zsn, .json"
                 OnProgressChange="@(e => { _progressPercent = e.ProgressPercent; _progressTitle = e.ProgressTitle; })"
                 OnCompleted="@OnCompleted"/>

<FluentProgress Min="0" Max="100" Visible="@(_progressPercent > 0)" Value="@_progressPercent"/>
<FluentLabel Alignment="HorizontalAlignment.Center">
    @_progressTitle
</FluentLabel>

<FluentButton Id="SelectFileButton" Appearance="Appearance.Accent">Select File</FluentButton>

@code
{
    FluentInputFile? _inputFile;
    int? _progressPercent;
    string? _progressTitle;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && _inputFile != null)
        {
            _inputFile.ShowFilesDialogAsync();
        }
    }

    bool Deserialize(FileStream stream)
    {
        JsonSerializerOptions options = new()
        {
            ReferenceHandler = ReferenceHandler.Preserve,
            WriteIndented = true
        };
        var p = JsonSerializer.Deserialize<Project>(stream, options);
        if (p != null)
        {
            AppState.Project = p;
            AppState.StateHasChanged();
            return true;
        }

        return false;
    }

    void OnCompleted(IEnumerable<FluentInputFileEventArgs> files)
    {
        _progressPercent = _inputFile!.ProgressPercent;
        _progressTitle = _inputFile!.ProgressTitle;

        bool fileDeserialized = false;
        foreach (var file in files)
        {
            if (!fileDeserialized)
            {
                var stream = file.LocalFile?.OpenRead();
                if (stream != null)
                {
                    fileDeserialized = Deserialize(stream);
                    stream.Close();
                }
            }

            file.LocalFile?.Delete();
        }

        NavigationManager.NavigateTo("/Zuschnitt");
    }
}